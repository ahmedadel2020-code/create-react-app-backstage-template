apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-react-app-template
  title: Create React App Template
  description: Create a new CRA website project
  tags:
    - react
    - cra
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com         
    - title: Deployment Configuration
      required:
        - project_id
        - gar_name
        - gar_location
        - service_name
        - region
      properties:
        project_id:
          title: Google Cloud Project ID
          type: string
          description: The Google Cloud Project ID where the app will be deployed.
        gar_name:
          title: Artifact Registry Name
          type: string
          description: The name of the Google Cloud Artifact Registry.
        gar_location:
          title: Artifact Registry Location
          type: string
          description: The location of the Google Cloud Artifact Registry.
        service_name:
          title: Cloud Run Service Name
          type: string
          description: The name of the Cloud Run service.
        region:
          title: Cloud Run Region
          type: string
          description: The region where the Cloud Run service will be deployed.

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          
    - id: create-workflow-dir
      name: Create workflows directory
      action: fs:mkdir
      input:
        directory: .github/workflows
    
    - id: cloudrun-yaml
      name: Create Cloud Run GitHub Action
      action: fs:write
      input:
        path: .github/workflows/google-cloudrun-docker.yaml
        contents: |
          name: Build and Deploy to Cloud Run

          on:
            push:
              branches: [ "master" ]

          env:
            PROJECT_ID: ${{ parameters.project_id }}  # Google Cloud project id
            GAR_NAME: ${{ parameters.gar_name }}  # Artifact Registry Name
            GAR_LOCATION: ${{ parameters.gar_location }}  # Artifact Registry location
            SERVICE: ${{ parameters.service_name }}  # Cloud Run service name
            REGION: ${{ parameters.region }} # Cloud Run service region

          jobs:
            deploy:
              permissions:
                contents: 'read'
                id-token: 'write'

              runs-on: ubuntu-latest
              steps:
                - name: Checkout
                  uses: actions/checkout@v2

                - name: Google Auth
                  id: auth
                  uses: 'google-github-actions/auth@v2'
                  with:
                    credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

                - name: Docker Auth
                  run: |-
                    gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

                - name: Build and Push Container 
                  run: |-
                    docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
                    docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"

                - name: Deploy to Cloud Run
                  id: deploy
                  uses: google-github-actions/deploy-cloudrun@v2
                  with:
                    service: ${{ env.SERVICE }}
                    region: ${{ env.REGION }}
                    image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}

                - name: Show Output
                  run: echo ${{ steps.deploy.outputs.url }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}