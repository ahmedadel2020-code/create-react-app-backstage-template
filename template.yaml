apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-react-app-template
  title: Create React App Template
  description: Create a new CRA website project
  tags:
    - react
    - cra
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Deployment Configuration
      required:
        - project_id
        - gar_name
        - gar_location
        - service_name
        - region
      properties:
        project_id:
          title: Google Cloud Project ID
          type: string
          description: The Google Cloud Project ID where the app will be deployed.
        gar_name:
          title: Artifact Registry Name
          type: string
          description: The name of the Google Cloud Artifact Registry.
        gar_location:
          title: Artifact Registry Location
          type: string
          description: The location of the Google Cloud Artifact Registry.
        service_name:
          title: Cloud Run Service Name
          type: string
          description: The name of the Cloud Run service.
        region:
          title: Cloud Run Region
          type: string
          description: The region where the Cloud Run service will be deployed.

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          PROJECT_ID: ${{ parameters.project_id }}
          GAR_NAME: ${{ parameters.gar_name }}
          GAR_LOCATION: ${{ parameters.gar_location }}
          SERVICE_NAME: ${{ parameters.service_name }}
          REGION: ${{ parameters.region }}

    - id: set-secrets
      name: Set GitHub Secrets
      action: execute
      input:
        shell: bash
        script: |
          GITHUB_API_URL="https://api.github.com"
          REPO=${{ parameters.repoUrl | parseRepoUrl }}
          OWNER=${{ REPO.owner }}
          REPO_NAME=${{ REPO.repo }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          GCP_CREDENTIALS_JSON='${{ parameters.secrets }}'

          # Base64 encode the GCP_CREDENTIALS_JSON
          GCP_CREDENTIALS_B64=$(echo -n "$GCP_CREDENTIALS_JSON" | base64)

          # Set the GCP_CREDENTIALS secret
          curl -X PUT -H "Authorization: token $TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          $GITHUB_API_URL/repos/$OWNER/$REPO_NAME/actions/secrets/GCP_CREDENTIALS \
          -d '{"encrypted_value":"'"$GCP_CREDENTIALS_B64"'"}'

    
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        secrets: ${{ parameters.secrets }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}