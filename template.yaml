apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-react-app-template
  title: Create React App Template
  description: Create a new CRA website project
  tags:
    - react
    - cra
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: GitHub Actions Configurations
      required:
        - branch_name
        - deployment_stage
        - include_unit_tests
        - enabled_environments
      properties:
        branch_name:
          title: Branch Name
          type: string
          description: The branch name to trigger the workflow (e.g., master, main)
          default: master
        deployment_stage:
          title: Deployment Stage
          type: string
          description: The stage of deployment
          enum:
            - development
            - staging
            - production
          default: development
        include_unit_tests:
          title: Include Unit Tests
          type: boolean
          description: Whether to include unit testing in the workflow
          default: true
        enabled_environments:
          title: Enabled Environment
          type: string
          description: Which environment to enable in the workflow
          enum:
            - development
            - staging
            - production
          default: development
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Deployment Configuration
      required:
        - project_id
        - gar_name
        - gar_location
        - service_name
        - region
      properties:
        project_id:
          title: Google Cloud Project ID
          type: string
          description: The Google Cloud Project ID where the app will be deployed.
        gar_name:
          title: Artifact Registry Name
          type: string
          description: The name of the Google Cloud Artifact Registry.
        gar_location:
          title: Artifact Registry Location
          type: string
          description: The location of the Google Cloud Artifact Registry.
        service_name:
          title: Cloud Run Service Name
          type: string
          description: The name of the Cloud Run service.
        region:
          title: Cloud Run Region
          type: string
          description: The region where the Cloud Run service will be deployed.

    - title: GCP Credentials
      required:
        - gcp_credentials
      properties:
        gcp_credentials:
          title: GCP Service Account Key
          type: string
          description: Base64 encoded GCP service account key JSON
          ui:widget: textarea
  steps:
    - id: create-repo
      name: Create Repository
      action: github:repo:create
      input:
        repoUrl: ${{ parameters.repoUrl }}
        description: This is ${{ parameters.component_id }}
        repoVisibility: public

    - id: create-env-dev
      name: Create Development Environment
      action: github:environment:create
      if: ${{ parameters.enabled_environments == 'development' }}
      input:
        repoUrl: ${{ parameters.repoUrl }}
        name: development
        environmentVariables:
          PROJECT_ID: ${{ parameters.project_id }}
          GAR_NAME: ${{ parameters.gar_name }}
          GAR_LOCATION: ${{ parameters.gar_location }}
          SERVICE_NAME: ${{ parameters.service_name }}
          REGION: ${{ parameters.region }}
          DEPLOYMENT_STAGE: ${{ parameters.deployment_stage }}
        secrets:
          GCP_CREDENTIALS: ${{ parameters.gcp_credentials }}

    - id: create-env-staging
      name: Create Staging Environment
      action: github:environment:create
      if: ${{ parameters.enabled_environments == 'staging' }}
      input:
        repoUrl: ${{ parameters.repoUrl }}
        name: staging
        environmentVariables:
          PROJECT_ID: ${{ parameters.project_id }}
          GAR_NAME: ${{ parameters.gar_name }}
          GAR_LOCATION: ${{ parameters.gar_location }}
          SERVICE_NAME: ${{ parameters.service_name }}
          REGION: ${{ parameters.region }}
          DEPLOYMENT_STAGE: staging
        secrets:
          GCP_CREDENTIALS: ${{ parameters.gcp_credentials }}

    - id: create-env-prod
      name: Create Production Environment
      action: github:environment:create
      if: ${{ parameters.enabled_environments == 'production' }}
      input:
        repoUrl: ${{ parameters.repoUrl }}
        name: production
        environmentVariables:
          PROJECT_ID: ${{ parameters.project_id }}
          GAR_NAME: ${{ parameters.gar_name }}
          GAR_LOCATION: ${{ parameters.gar_location }}
          SERVICE_NAME: ${{ parameters.service_name }}
          REGION: ${{ parameters.region }}
          DEPLOYMENT_STAGE: production
        secrets:
          GCP_CREDENTIALS: ${{ parameters.gcp_credentials }}

    - id: wait-for-env
      name: Wait for Environment Setup
      action: debug:log
      input:
        message: Waiting for environment setup to complete...

    - id: delay
      name: Add Delay for Environment Propagation
      action: debug:wait
      input:
        seconds: 60

    - id: verify-env
      name: Verify Environment Setup
      action: github:environment:read
      input:
        repoUrl: ${{ parameters.repoUrl }}
        name: ${{ parameters.enabled_environments }}
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          PROJECT_ID: ${{ parameters.project_id }}
          GAR_NAME: ${{ parameters.gar_name }}
          GAR_LOCATION: ${{ parameters.gar_location }}
          SERVICE_NAME: ${{ parameters.service_name }}
          REGION: ${{ parameters.region }}
          branch_name: ${{ parameters.branch_name }}
          deployment_stage: ${{ parameters.deployment_stage }}
          include_unit_tests: ${{ parameters.include_unit_tests }}
          enabled_environments: ${{ parameters.enabled_environments }}

    - id: publish
      name: Publish
      action: github:repo:push
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
